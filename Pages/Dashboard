#import react

import React, { useState, useEffect } from "react";
import { Patient, Doctor, Appointment } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
  Users, 
  Stethoscope, 
  Calendar, 
  Plus,
  TrendingUp,
  Clock,
  CheckCircle
} from "lucide-react";

import QuickStats from "../components/dashboard/QuickStats";
import RecentActivity from "../components/dashboard/RecentActivity";
import AppointmentSummary from "../components/dashboard/AppointmentSummary";

export default function Dashboard() {
  const [stats, setStats] = useState({
    totalPatients: 0,
    totalDoctors: 0, 
    totalAppointments: 0,
    todayAppointments: 0
  });
  const [recentPatients, setRecentPatients] = useState([]);
  const [upcomingAppointments, setUpcomingAppointments] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    setIsLoading(true);
    try {
      const [patients, doctors, appointments] = await Promise.all([
        Patient.list('-created_date'),
        Doctor.list(),
        Appointment.list('-created_date')
      ]);

      const today = new Date().toISOString().split('T')[0];
      const todayAppointments = appointments.filter(apt => 
        apt.appointment_date === today
      );

      setStats({
        totalPatients: patients.length,
        totalDoctors: doctors.length,
        totalAppointments: appointments.length,
        todayAppointments: todayAppointments.length
      });

      setRecentPatients(patients.slice(0, 5));
      setUpcomingAppointments(appointments.slice(0, 5));
    } catch (error) {
      console.error("Error loading dashboard data:", error);
    }
    setIsLoading(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6">
      <div className="max-w-7xl mx-auto space-y-8">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-6">
          <div>
            <h1 className="text-4xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
              Hospital Dashboard
            </h1>
            <p className="text-slate-600 mt-2 text-lg">
              Welcome back! Here's what's happening at your hospital today.
            </p>
          </div>
          <div className="flex gap-3">
            <Link to={createPageUrl("Patients")}>
              <Button className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 shadow-lg">
                <Plus className="w-4 h-4 mr-2" />
                Add Patient
              </Button>
            </Link>
            <Link to={createPageUrl("Appointments")}>
              <Button variant="outline" className="border-slate-300 hover:bg-slate-50">
                <Calendar className="w-4 h-4 mr-2" />
                Book Appointment
              </Button>
            </Link>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <QuickStats
            title="Total Patients"
            value={stats.totalPatients}
            icon={Users}
            gradient="from-blue-500 to-blue-600"
            isLoading={isLoading}
          />
          <QuickStats
            title="Total Doctors" 
            value={stats.totalDoctors}
            icon={Stethoscope}
            gradient="from-emerald-500 to-emerald-600"
            isLoading={isLoading}
          />
          <QuickStats
            title="Total Appointments"
            value={stats.totalAppointments}
            icon={Calendar}
            gradient="from-purple-500 to-purple-600"
            isLoading={isLoading}
          />
          <QuickStats
            title="Today's Appointments"
            value={stats.todayAppointments}
            icon={Clock}
            gradient="from-orange-500 to-orange-600"
            isLoading={isLoading}
          />
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-6">
            <RecentActivity 
              patients={recentPatients}
              isLoading={isLoading}
            />
          </div>

          <div className="space-y-6">
            <AppointmentSummary
              appointments={upcomingAppointments}
              isLoading={isLoading}
            />
          </div>
        </div>
      </div>
    </div>
  );
}
